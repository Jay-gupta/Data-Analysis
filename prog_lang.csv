program,language
"n=int(input(""Enter the number of elements to be inserted: "")) a=[] for i in range(0,n): elem=int(input(""Enter element: "")) a.append(elem) avg=sum(a)/n print(""Average of elements in the list"",round(avg,2))",python
"a=int(input(""Enter value of first variable: "")) b=int(input(""Enter value of second variable: "")) a=a+b b=a-b a=a-b print(""a is:"",a,"" b is:"",b)",python
"n=int(input(""Enter a number n: "")) temp=str(n) t1=temp+temp t2=temp+temp+temp comp=n+int(t1)+int(t2) print(""The value is:"",comp)",python
"n=int(input(""Enter number: "")) rev=0 while(n>0): dig=n%10 rev=rev*10+dig n=n//10 print(""Reverse of the number:"",rev)",python
"n=int(input(""Enter number: "")) if(n>0): print(""Number is positive"") else: print(""Number is negative"")",python
"sub1=int(input(""Enter marks of the first subject: "")) sub2=int(input(""Enter marks of the second subject: "")) ",python
"lower=int(input(""Enter lower range limit:"")) upper=int(input(""Enter upper range limit:"")) n=int(input(""Enter the number to be divided by:"")) for i in range(lower,upper+1): if(i%n==0): print(i)",python
"a=int(input(""Enter the first number: "")) b=int(input(""Enter the second number: "")) quotient=a//b remainder=a%b print(""Quotient is:"",quotient) print(""Remainder is:"",remainder)",python
"n=int(input(""Enter number:"")) temp=n rev=0 while(n>0): dig=n%10 rev=rev*10+dig n=n//10 if(temp==rev): print(""The number is a palindrome!"") else: print(""The number isn't a palindrome!"")",python
"def find_odd_occurring(alist): """"""Return the element that occurs odd number of times in alist.   alist is a list in which all elements except one element occurs an even number of times. """""" ans = 0   for element in alist: ans ^= element   return ans     alist = input('Enter the list: ').split() alist = [int(i) for i in alist] ans = find_odd_occurring(alist) print('The element that occurs odd number of times:', ans)",python
"#include <stdio.h> int main() { int i, j, rows; printf(""Enter number of rows: ""); scanf(""%d"",&rows); for(i=1; i<=rows; ++i) { for(j=1; j<=i; ++j) { printf(""* ""); } printf(""\n""); } return 0; }",ct
"#include <stdio.h> int main() { char c; for(c = 'A'; c <= 'Z'; ++c) printf(""%c "", c); return 0; }",ct
"#include <stdio.h> struct student { char name[50]; int roll; float marks; } s; int main() { printf(""Enter information:\n""); printf(""Enter name: ""); scanf(""%s"", s.name); printf(""Enter roll number: ""); scanf(""%d"", &s.roll); printf(""Enter marks: ""); scanf(""%f"", &s.marks); printf(""Displaying Information:\n""); printf(""Name: ""); puts(s.name); printf(""Roll number: %d\n"",s.roll); printf(""Marks: %.1f\n"", s.marks); return 0; }",ct
"#include <stdio.h> int main() { char c; printf(""Enter a character: ""); // Reads character input from the user scanf(""%c"", &c); // %d displays the integer value of a character // %c displays the actual character printf(""ASCII value of %c = %d"", c, c); return 0; }",ct
"#include <stdio.h> int main() { int a; long b; long long c; double e; long double f; printf(""Size of int = %ld bytes \n"", sizeof(a)); printf(""Size of long = %ld bytes\n"", sizeof(b)); printf(""Size of long long = %ld bytes\n"", sizeof(c)); printf(""Size of double = %ld bytes\n"", sizeof(e)); printf(""Size of long double = %ld bytes\n"", sizeof(f)); return 0; }",ct
"#include <stdio.h> int main() { double firstNumber, secondNumber, temporaryVariable; printf(""Enter first number: ""); scanf(""%lf"", &firstNumber); printf(""Enter second number: ""); scanf(""%lf"",&secondNumber); // Value of firstNumber is assigned to temporaryVariable temporaryVariable = firstNumber; // Value of secondNumber is assigned to firstNumber firstNumber = secondNumber; // Value of temporaryVariable (which contains the initial value of firstNumber) is assigned to secondNumber secondNumber = temporaryVariable; printf(""\nAfter swapping, firstNumber = %.2lf\n"", firstNumber); printf(""After swapping, secondNumber = %.2lf"", secondNumber); return 0; } ",ct
"#include <stdio.h> int main() { char c; int isLowercaseVowel, isUppercaseVowel; printf(""Enter an alphabet: ""); scanf(""%c"",&c); // evaluates to 1 (true) if c is a lowercase vowel isLowercaseVowel = (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'); // evaluates to 1 (true) if c is an uppercase vowel isUppercaseVowel = (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U'); // evaluates to 1 (true) if either isLowercaseVowel or isUppercaseVowel is true if (isLowercaseVowel || isUppercaseVowel) printf(""%c is a vowel."", c); else printf(""%c is a consonant."", c); return 0; }",ct
"#include <stdio.h> #include <math.h> int main() { double a, b, c, discriminant, root1, root2, realPart, imaginaryPart; printf(""Enter coefficients a, b and c: ""); scanf(""%lf %lf %lf"",&a, &b, &c); discriminant = b*b-4*a*c; // condition for real and different roots if (discriminant > 0) { // sqrt() function returns square root root1 = (-b+sqrt(discriminant))/(2*a); root2 = (-b-sqrt(discriminant))/(2*a); printf(""root1 = %.2lf and root2 = %.2lf"",root1 , root2); } //condition for real and equal roots else if (discriminant == 0) { root1 = root2 = -b/(2*a); printf(""root1 = root2 = %.2lf;"", root1); } // if roots are not real else { realPart = -b/(2*a); imaginaryPart = sqrt(-discriminant)/(2*a); printf(""root1 = %.2lf+%.2lfi and root2 = %.2f-%.2fi"", realPart, imaginaryPart, realPart, imaginaryPart); } return 0; } ",ct
"#include <stdio.h> int main() { double number; printf(""Enter a number: ""); scanf(""%lf"", &number); if (number <= 0.0) { if (number == 0.0) printf(""You entered 0.""); else printf(""You entered a negative number.""); } else printf(""You entered a positive number.""); return 0; }",ct
"#include <stdio.h> int main() { int year; printf(""Enter a year: ""); scanf(""%d"",&year); if(year%4 == 0) { if( year%100 == 0) { // year is divisible by 400, hence the year is a leap year if ( year%400 == 0) printf(""%d is a leap year."", year); else printf(""%d is not a leap year."", year); } else printf(""%d is a leap year."", year ); } else printf(""%d is not a leap year."", year); return 0; }",ct
"#include <iostream> using namespace std; int main() { cout << ""Size of char: "" << sizeof(char) << "" byte"" << endl; cout << ""Size of int: "" << sizeof(int) << "" bytes"" << endl; cout << ""Size of float: "" << sizeof(float) << "" bytes"" << endl; cout << ""Size of double: "" << sizeof(double) << "" bytes"" << endl; return 0; }",cpp
"#include <iostream> using namespace std; int main() { cout << ""Size of char: "" << sizeof(char) << "" byte"" << endl; cout << ""Size of int: "" << sizeof(int) << "" bytes"" << endl; cout << ""Size of float: "" << sizeof(float) << "" bytes"" << endl; cout << ""Size of double: "" << sizeof(double) << "" bytes"" << endl; return 0; }",cpp
"#include <iostream> using namespace std; int main() { int n; cout << ""Enter a positive integer: ""; cin >> n; for (int i = 1; i <= 10; ++i) { cout << n << "" * "" << i << "" = "" << n * i << endl; } return 0; }",cpp
"#include <iostream> using namespace std; int main() { double firstNumber, secondNumber, productOfTwoNumbers; cout << ""Enter two numbers: ""; // Stores two floating point numbers in variable firstNumber and secondNumber respectively cin >> firstNumber >> secondNumber; // Performs multiplication and stores the result in variable productOfTwoNumbers productOfTwoNumbers = firstNumber * secondNumber; cout << ""Product = "" << productOfTwoNumbers; return 0; }",cpp
"#include <iostream> using namespace std; class Check { private: int i; public: Check(): i(0) { } void operator ++() { ++i; } void Display() { cout << ""i="" << i << endl; } }; int main() { Check obj; // Displays the value of data member i for object obj obj.Display(); // Invokes operator function void operator ++( ) ++obj; // Displays the value of data member i for object obj obj.Display(); return 0; }",cpp
"#include <iostream> using namespace std; class Complex { private: float real; float imag; public: Complex(): real(0), imag(0){ } void input() { cout << ""Enter real and imaginary parts respectively: ""; cin >> real; cin >> imag; } // Operator overloading Complex operator - (Complex c2) { Complex temp; temp.real = real - c2.real; temp.imag = imag - c2.imag; return temp; } void output() { if(imag < 0) cout << ""Output Complex number: ""<< real << imag << ""i""; else cout << ""Output Complex number: "" << real << ""+"" << imag << ""i""; } }; int main() { Complex c1, c2, result; cout<<""Enter first complex number:\n""; c1.input(); cout<<""Enter second complex number:\n""; c2.input(); // In case of operator overloading of binary operators in C++ programming, // the object on right hand side of operator is always assumed as argument by compiler. result = c1 - c2; result.output(); return 0; }",cpp
"#include <iostream> using namespace std; int main() { char c; cout << ""Enter a character: ""; cin >> c; cout << ""ASCII Value of "" << c << "" is "" << int(c); return 0; }",cpp
"#include <iostream> using namespace std; int main() { int origNum, num, rem, sum = 0; cout << ""Enter a positive integer: ""; cin >> origNum; num = origNum; while(num != 0) { rem = num % 10; sum += rem * rem * rem; num /= 10; } if(sum == origNum) cout << origNum << "" is an Armstrong number.""; else cout << origNum << "" is not an Armstrong number.""; return 0; }",cpp
"#include <iostream> #include <cmath> using namespace std; int convertBinarytoOctal(long long); int main() { long long binaryNumber; cout << ""Enter a binary number: ""; cin >> binaryNumber; cout << binaryNumber << "" in binary = "" << convertBinarytoOctal(binaryNumber) << "" in octal ""; return 0; } int convertBinarytoOctal(long long binaryNumber) { int octalNumber = 0, decimalNumber = 0, i = 0; while(binaryNumber != 0) { decimalNumber += (binaryNumber%10) * pow(2,i); ++i; binaryNumber/=10; } i = 1; while (decimalNumber != 0) { octalNumber += (decimalNumber % 8) * i; decimalNumber /= 8; i *= 10; } return octalNumber; }",cpp
"#include <iostream> using namespace std; struct student { char name[50]; int roll; float marks; } s[10]; int main() { cout << ""Enter information of students: "" << endl; // storing information for(int i = 0; i < 10; ++i) { s[i].roll = i+1; cout << ""For roll number"" << s[i].roll << "","" << endl; cout << ""Enter name: ""; cin >> s[i].name; cout << ""Enter marks: ""; cin >> s[i].marks; cout << endl; }",cpp
"public class EvenPosition {   public static void main(String[] args) {         //Initialize array      int [] arr = new int [] {1, 2, 3, 4, 5};    System.out.println(""Elements of given array present on even position: "");  //Loop through the array by incrementing value of i //Here, i will start from 1 as first even positioned element is present at position 1.   for (int i = 1; i < arr.length; i = i+2) {  System.out.println(arr[i]);   }    }  ",java
"import java.util.Scanner; class PrimeNumberDemo { public static void main(String args[]) { int n; int status = 1; int num = 3; //For capturing the value of n Scanner scanner = new Scanner(System.in); System.out.println(""Enter the value of n:""); //The entered value is stored in the var n n = scanner.nextInt(); if (n >= 1) { System.out.println(""First ""+n+"" prime numbers are:""); //2 is a known prime number System.out.println(2); } for ( int i = 2 ; i <=n ; ) { for ( int j = 2 ; j <= Math.sqrt(num) ; j++ ) { if ( num%j == 0 ) { status = 0; break; } } if ( status != 0 ) { System.out.println(num); i++; } status = 1; num++; } } }",java
"import java.util.Scanner; class PrimeCheck { public static void main(String args[]) { int temp; boolean isPrime=true; Scanner scan= new Scanner(System.in); System.out.println(""Enter any number:""); //capture the input in an integer int num=scan.nextInt(); scan.close(); for(int i=2;i<=num/2;i++) { temp=num%i; if(temp==0) { isPrime=false; break; } } //If isPrime is true then the number is prime else not if(isPrime) System.out.println(num + "" is a Prime Number""); else System.out.println(num + "" is not a Prime Number""); } }",java
"public class JavaExample { public static void main(String[] args) { String str = ""Welcome to Beginnersbook""; String reversed = reverseString(str); System.out.println(""The reversed string is: "" + reversed); } public static String reverseString(String str) { if (str.isEmpty()) return str; //Calling Function Recursively return reverseString(str.substring(1)) + str.charAt(0); } }",java
"public class Demo { public static void main(String[] args) { int number=109; if(number > 0) { System.out.println(number+"" is a positive number""); } else if(number < 0) { System.out.println(number+"" is a negative number""); } else { System.out.println(number+"" is neither positive nor negative""); } } }",java
"public class Demo { public static void main(String[] args) { char ch = 'P'; int asciiCode = ch; // type casting char as int int asciiValue = (int)ch; System.out.println(""ASCII value of ""+ch+"" is: "" + asciiCode); System.out.println(""ASCII value of ""+ch+"" is: "" + asciiValue); } }",java
"import java.util.Stack; import java.util.Scanner; class PalindromeTest { public static void main(String[] args) { System.out.print(""Enter any string:""); Scanner in=new Scanner(System.in); String inputString = in.nextLine(); Stack stack = new Stack(); for (int i = 0; i < inputString.length(); i++) { stack.push(inputString.charAt(i)); } String reverseString = """"; while (!stack.isEmpty()) { reverseString = reverseString+stack.pop(); } if (inputString.equals(reverseString)) System.out.println(""The input String is a palindrome.""); else System.out.println(""The input String is not a palindrome.""); } }",java
"public class JavaExample { int add(int num1, int num2) { return num1+num2; } int add(int num1, int num2, int num3) { return num1+num2+num3; } int add(int num1, int num2, int num3, int num4) { return num1+num2+num3+num4; } public static void main(String[] args) { JavaExample obj = new JavaExample(); //This will call the first add method System.out.println(""Sum of two numbers: ""+obj.add(10, 20)); //This will call second add method System.out.println(""Sum of three numbers: ""+obj.add(10, 20, 30)); //This will call third add method System.out.println(""Sum of four numbers: ""+obj.add(1, 2, 3, 4)); } }",java
"import java.util.Scanner; public class JavaExample { public static void main(String[] args) { int num1, num2, num3, result, temp; /* Scanner is used for getting user input. * The nextInt() method of scanner reads the * integer entered by user. */ Scanner scanner = new Scanner(System.in); System.out.println(""Enter First Number:""); num1 = scanner.nextInt(); System.out.println(""Enter Second Number:""); num2 = scanner.nextInt(); System.out.println(""Enter Third Number:""); num3 = scanner.nextInt(); scanner.close(); /* In first step we are comparing only num1 and * num2 and storing the largest number into the * temp variable and then comparing the temp and * num3 to get final result. */ temp = num1>num2 ? num1:num2; result = num3>temp ? num3:temp; System.out.println(""Largest Number is:""+result); }",java
"import java.util.Scanner; public class JavaExample { public static void main(String[] args) { double num1, num2; Scanner scanner = new Scanner(System.in); System.out.print(""Enter first number:""); /* We are using data type double so that user * can enter integer as well as floating point * value */ num1 = scanner.nextDouble(); System.out.print(""Enter second number:""); num2 = scanner.nextDouble(); System.out.print(""Enter an operator (+, -, *, /): ""); char operator = scanner.next().charAt(0); scanner.close(); double output; switch(operator) { case '+': output = num1 + num2; break; case '-': output = num1 - num2; break; case '*': output = num1 * num2; break; case '/': output = num1 / num2; break; /* If user enters any other operator or char apart from * +, -, * and /, then display an error message to user * */ default: System.out.printf(""You have entered wrong operator""); return; } System.out.println(num1+"" ""+operator+"" ""+num2+"": ""+output); } }",java
